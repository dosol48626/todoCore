<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dosol.todocore.mapper.TodoMapper">
    <select id="getTime" resultType="String">
        select now()
    </select>
<!--    select 과 insert 구분-->

    <insert id="insert">
        insert into tbl_todo (title, dueDate, writer) values ( #{title}, #{dueDate}, #{writer})
    </insert>

    <select id="selectOne" resultType="com.dosol.todocore.vo.TodoVO">
        select * from tbl_todo where tno = #{tno}
    </select>

    <select id="getList" resultType="com.dosol.todocore.vo.TodoVO">
        select * from tbl_todo
    </select>

    <delete id="delete">
        delete from tbl_todo where tno=#{tno}
    </delete>

    <update id="update">
        update tbl_todo set title=#{title}, dueDate=#{dueDate}, finished=#{finished} where tno = #{tno}
    </update>

    <select id="selectList" resultType="com.dosol.todocore.vo.TodoVO">
        select * from tbl_todo
        <include refid="search"></include>
        order by tno desc limit ${skip}, #{size}
    </select>
    <select id="getCount">
        select count(tno) from tbl_todo
        <include refid="search"></include>
    </select>

    <sql id="search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=") " separator=" OR ">
                    <if test="type == 't'.toString()">
                        title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>

            <if test="finished">
                <trim prefix="and">
                    finished = 1
                </trim>
            </if>

            <if test="from != null and to != null">
                <trim prefix="and">
                    dueDate between  #{from} and #{to}
                </trim>
            </if>
        </where>
    </sql>
</mapper>